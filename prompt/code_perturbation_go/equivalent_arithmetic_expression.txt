you should change the arithmetic computation or arithmetic assignment equivalently by adding and then minusing the same type number in the arithmetic expression such as "+ 3 -3". Note that, you can only change the arithmetic computation or arithmetic assignment which like 'a = 4', 'a = 5*3', 'b = 4.3', 'a = 6/2', 'a = 4 - 3' that only includes numeric constants.

The example in go is as follows, you should adapt it to the programming language of the given code.
For example, in a go code snippet with two functions:
"""
import (
    "fmt"
)

func func1() int {
    a := 5
    return a
}

func func2() {
    b := 10
    c := 5.1
    d := func1() 

    fmt.Println(b)
    fmt.Println(c)
}
"""
The entry_point is 'func2', you should change the arithmetic expression in the function 'func2'. In 'func2', the variable 'b' is equivalent 10, and you can add 3 and minus 3 to 'b'.  The rephrased code can be like:
"""
import (
    "fmt"
)

func func1() int {
    a := 5
    return a
}

func func2() {
    b := 10 + 3 - 3  
    c := 5.1 + 1 - 1  
    d := func1() 

    fmt.Println(b)
    fmt.Println(c)
}
"""
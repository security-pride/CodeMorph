you should extract methods from 'if' statement. The following explains the rules to extract the method from the 'if' statement which is in java, you should adapt it to the programming language of the given code:
The 'if' statement in the java is as:
"""
    public static void func() {
        if (conditionA) {
            bodyA;
        } else {
            bodyB;
        }
    }
"""
We assume that there are variables x and y in the conditionA expression, then you should change the code into:
"""
    public static boolean randomName(int a, int b) {
        return conditionA;
    }

    public static void func() {
        if (randomName(x, y)) {
            bodyA();
        } else {
            bodyB();
        }
    }
"""
Note that, the arguments name of the extracted method should be different from the variables in the conditionA expression. The name of the extracted method should be confused that it is not clear what the method does.

For example, in a python code snippet with two functions:
"""

public static int func1() {
    int a = 1;
    return a;
}

public static void func2() {
    int a = 10;
    int b = 2;
    String c = "It is a string";

    if (a % 2 != 0 && b > 2 && !c.isEmpty()) {
        System.out.println("Hello World");
    } else {
        System.out.println("Goodbye World");
    }
}
"""
The entry_point is 'func2', you should extract the method from the if statement in the function 'func2'. Assuming the extracted method name if do_computation, the rephrased code can be like:

"""
    public static int func1() {
        int a = 1;
        return a;
    }

    public static boolean doComputation(int x, int y, String z) {
        return (x % 2 != 0) && (y > 2) && (!z.isEmpty());
    }

    public static void func2() {
        int a = 10;
        int b = 2;
        String c = "It is a string";

        if (doComputation(a, b, c)) {
            System.out.println("Hello World");
        } else {
            System.out.println("Goodbye World");
        }
    }
"""
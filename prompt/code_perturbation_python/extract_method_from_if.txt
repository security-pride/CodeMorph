you should extract methods from 'if' statement. The following explains the rules to extract the method from the 'if' statement which is in python, you should adapt it to the programming language of the given code:
The 'if' statement in the python is as:
"""
def func():
    if conditionA:
        bodyA
    else:
        bodyB
"""
We assume that there are variables x and y in the conditionA expression, then you should change the code into:
"""
def random_name(a, b):
    return conditionA

def func():
    if random_name(x, y):
        bodyA
    else:
        bodyB
"""
Note that, the arguments name of the extracted method should be different from the variables in the conditionA expression. The name of the extracted method should be confused that it is not clear what the method does.

For example, in a python code snippet with two functions:
"""
def func1():
    a = 1
    return a

def func2():
    a = 10
    b = 2
    c = "It is a string"

    if a % 2 and b > 2 and c != "":
        print("Hello World")
    else:
        print("Goodbye World")
"""
The entry_point is 'func2', you should extract the method from the if statement in the function 'func2'. Assuming the extracted method name if do_computation, the rephrased code can be like:

"""
def func1():
    a = 1
    return a

def do_computation(x, y, z):
    return x % 2 and y > 2 and z != ""

def func2():
    a = 10
    b = 2
    c = "It is a string"

    if do_computation(a, b, c):
        print("Hello World")
    else:
        print("Goodbye World")
"""